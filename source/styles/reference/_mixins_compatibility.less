//
// _mixins_compatibility.less contains mixins that add various CSS3 (and some 2) support across various browsers
// Author: Habanero Consulting Group <support@habaneroconsulting.com>
//

//
// backface-visibility A cross browser implementation of backface-visibility.
// 
// @param {string} @visibility Shows whether or not the backface is visible when facing the user. Defaults to visible (browser default).
//
.backface-visibility(@visibility: visible) {
    -webkit-backface-visibility: @visibility;
            backface-visibility: @visibility;
}


//
// background-clip A cross browser implementation of background-clip.
//
// @param {string} @clip Where the background image should be clipped (padding-box, border-box). Defaults to padding-box (browser default).
//
.background-clip(@clip: padding-box) {
    background-clip: @clip;
}


//
// background-origin A cross browser implementation of background-origin.
// 
// @param {string} @origin The origin of where the background image should lay. Defaults to padding-box (browser default).
//
.background-origin(@origin: padding-box) {
       -moz-background-origin: @origin;
    -webkit-background-origin: @origin;
            background-origin: @origin;
}


//
// border-radius A cross browser implemenetation of border-radius. Does not support IE8 and below.
//
// @{param} {int} @radius The border radius used on each corner.
//
.border-radius(@radius) {
    border-radius: @radius;
    background-clip: padding-box;
}


//
// box-shadow A cross-browser implementation of box-shadow. Does not work in IE8 and below.
//
// @param {string} @properties All the properties
//
.box-shadow(@properties) {
    -webkit-box-shadow: @properties;
            box-shadow: @properties;
}


//
// box-shadow A cross-browser implementation of box-shadow. Does not work in IE8 and below.
//
// @param {int} @horizontal The horizontal offset for the shadow
// @param {int} @vertical The vertical offset for the shadow
// @param {int} @blur The blur for the shadow
// @param {int} @spread The spread for the shadow
// @param {color} @color The colour for the shadow
//
.box-shadow(@horizontal, @vertical, @blur, @spread, @color) {
    -webkit-box-shadow: @horizontal @vertical @blur @spread @color;
            box-shadow: @horizontal @vertical @blur @spread @color;
}


//
// inner-box-shadow A cross-browser implementation of box-shadow with inset. Does not work in IE8 and below.
//
// @param {int} @horizontal The horizontal offset for the shadow
// @param {int} @vertical The vertical offset for the shadow
// @param {int} @blur The blur for the shadow
// @param {int} @spread The spread for the shadow
// @param {color} @color The colour for the shadow
//
.inner-box-shadow(@horizontal, @vertical, @blur, @spread, @color) {
    -webkit-box-shadow: inset @horizontal @vertical @blur @spread @color;
            box-shadow: inset @horizontal @vertical @blur @spread @color;
}


//
// box-sizing A cross-browser implementation of box-sizing.
//
// @param {string} @args A list of arguments for box-sizing. Defaults to border-box (not a browser standard).
//
.box-sizing(@sizing: border-box) {
    -webkit-box-sizing: @sizing;
       -moz-box-sizing: @sizing;
            box-sizing: @sizing;
}


//
// column-count A cross-browser implementation of column-count. Does not support IE8 and below.
//
// @param {int} @columns The number of columns to be made
// @param {int} @columnGap The width between the columns
//
.column-count(@columns) {
    -webkit-column-count: @columns;
       -moz-column-count: @columns; 
            column-count: @columns;
}


//
// column-count A cross-browser implementation of column-count. Does not support IE8 and below.
//
// @param {int} @columns The number of columns to be made
// @param {int} @columnGap The width between the columns
//
.column-count(@columns, @columnGap) {
    -webkit-column-count: @columns;
       -moz-column-count: @columns; 
            column-count: @columns;

    -webkit-column-gap: @columnGap;
       -moz-column-gap: @columnGap;
            column-gap: @columnGap;
}


//
// inline-block A cross-browser implementation of inline-block with IE7 and below fallback
//
.inline-block() {
    display: inline-block;
    *display: inline;
    zoom: 1;
}


//
// inline-block with alignment
//
// @param {string} inline-block-alignment The alignment of the inline block element
//
.inline-block(@alignment) {
    .inline-block();
    vertical-align: @alignment;
}


//
// linear-gradient with mixed fallback for IE9 and below.
//
// @param {color} @start The start (top) color of the gradient.
// @param {color} @end The end (bottom) color of the gradient
//
.linear-gradient(@start, @end) {
    background-color: mix(@start, @end);
    background-image: -webkit-linear-gradient(top, @start, @end);
    background-image:   linear-gradient(to bottom, @start, @end);
}


//
// linear-gradient with mixed fallback for IE9 and below.
//
// @param {color} @fallback A fallback color for browsers that don't support gradients
// @param {color} @start The start (top) color of the gradient.
// @param {color} @end The end (bottom) color of the gradient
//
.linear-gradient(@fallback, @start, @end) {
    background-color: @fallback;
    background-image: -webkit-linear-gradient(top, @start, @end);
    background-image:   linear-gradient(to bottom, @start, @end);
}


//
// linear gradient from Top To Bottom with percentage based stop
// 
// @param {color} @start starting color
// @param {color} @endcolor ending color
// @param {stop} number percentage based to stop at
// 
.ttb-linear-gradient(@start, @endcolor, @numStop) {
    //background-image: -webkit-gradient(linear,left top, left bottom, from(@start) 0%, to(@endcolor) @numStop); // Chrome, Safari 4+
    background-image: -webkit-linear-gradient(top, @start 0%, @endcolor @numStop); // Chrome 10+, Safari 5.1+
    background-image:         linear-gradient(top, @start 0%, @endcolor @numStop);
}


//
// linear gradient from Top To Bottom with percentage based stop
// 
// @param {color} @start starting color
// @param {stop} @startstop percentage based to stop at
// @param {color} @middlecolor middle color
// @param {stop} @middlestop percentage based to stop at
// @param {color} @endcolor ending color
// @param {stop} @endstop percentage based to stop at
// @param {color} @fallback A fallback color for browsers that don't support gradients
// 
.ttb-linear-gradient(@startcolor, @startstop, @middlecolor, @middlestop, @endcolor, @endstop, @fallback) {
    background-color: @fallback;
    background-image: -webkit-linear-gradient(top, @startcolor @startstop, @middlecolor @middlestop, @endcolor @endstop); // Chrome 10+, Safari 5.1+
    background-image:         linear-gradient(top, @startcolor @startstop, @middlecolor @middlestop, @endcolor @endstop);
}


//
// ltr-linear-gradient Creates a linear gradient with two stops going left to right. Falls back to the mixed color
//                     IE9 and below.
//
// @param {color} @left The start (left) color of the gradient
// @param {color} @right The end (right) color of the gradient
//
.ltr-linear-gradient(@left, @right) {
    background-color: mix(@left, @right);
    background-image: -webkit-gradient(linear, left top, right bottom, from(@left), to(@right)); // Chrome, Safari 4+
    background-image: -webkit-linear-gradient(left, @left 0%, @right 100%); // Chrome 10+, Safari 5.1+
    background-image:    -moz-linear-gradient(left, @left 0%, @right 100%); // FF 3.6+
    background-image:     -ms-linear-gradient(left, @left 0%, @right 100%); // IE10+
    background-image:      -o-linear-gradient(left, @left 0%, @right 100%); // Opera 11.10+
    background-image:         linear-gradient(left, @left 0%, @right 100%);
}


//
// ltr-linear-gradient Creates a linear gradient with three stops going left to right. Falls back to the middle color
//                     IE9 and below.
//
// @param {color} @left The start (left) color of the gradient
// @param {color} @middle The middle color of the gradient
// @param {color} @right The end (right) color of the gradient
//
.ltr-linear-gradient(@left, @middle, @right) {
    background-color: @middle;
    background-image: -webkit-linear-gradient(left, @left 0%, @middle 50%, @right 100%); // Chrome 10+, Safari 5.1+
    background-image:         linear-gradient(left, @left 0%, @middle 50%, @right 100%);
}


//
// opacity Changes the opacity on the box with IE8 and below fallback.
//
// @param {int} @opacity The opacity of the box as a integer (out of 100).
//
.opacity(@opacity) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}


//
// text-shadow A cross-browser implementation of text shadow. Does not support IE8 or below.
//
// @param {string} @args The arguments for the text shadow.
//
.text-shadow(@args) {
    text-shadow: @args;
}


/*#region Transform */

//
// transform A cross-browser implementation of the newer version of transform. Does not work in IE9 and below.
//
// @param {string} @type The arguments for the transform
//
.transform(@type) {
    -webkit-transform: @type;
        -ms-transform: @type;
            transform: @type;
}


//
// Scale
//
// @param {int} @factor The size of the scaling
//
.scale(@factor) {
    -webkit-transform: scale(@factor);
        -ms-transform: scale(@factor);
            transform: scale(@factor);
}


//
// rotate
//
// @param {int} @deg The degree to rotate
//
.rotate(@deg) {
    -webkit-transform: rotate(@deg);
        -ms-transform: rotate(@deg);
            transform: rotate(@deg);
}


//
// skew
//
// @param {int} @deg The degree to skew
// @param {int} @deg2 The degree to skew
//
.skew(@deg, @deg2) {
    -webkit-transform: skew(@deg, @deg2);
        -ms-transform: skew(@deg, @deg2);
            transform: skew(@deg, @deg2);

    -webkit-backface-visibility: hidden;
}


//
// translate
//
// @param {int} @x The translation in the x axis
// @param {int} @y The translation in the y axis
//
.translate(@x, @y:0) {
    -webkit-transform: translate(@x, @y);
        -ms-transform: translate(@x, @y);
            transform: translate(@x, @y);
}

/*#endregion */

//
// transition A cross-browser implementation of transition. Does not work in IE9 and below.
//
// @param {string} @property The CSS properties that need to be transitioned. Defaults to every property.
// @param {string} @duration The length of time for the transition
// @param {string} @timing The timing keyword used. Defaults to linear.
//
.transition(@properties) {
    -webkit-transition: @properties;
            transition: @properties;
}